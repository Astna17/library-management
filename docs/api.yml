openapi: 3.0.3
info:
  title: Library API
  version: 1.1.0
  description: STD22027
servers:
  - url: https://library.com
paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - $ref: '#/components/parameters/queryPagination'
        - $ref: '#/components/parameters/pathPagination'

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response200'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response400'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response500'

    put:
       tags:
         - Books
       summary: Create or update a list of books
       operationId: crupdateBooks
       requestBody:
        content:
         application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Book"

       responses:
         200:
          description: Success
          content:
           application/json:
              schema:
                $ref: "#/components/schemas/Response200"
  /authors:
    get:
      summary: Get all authors
      operationId: getAuthors
      tags:
        - Authors

      parameters:
        - $ref: '#/components/parameters/queryPagination'
        - $ref: '#/components/parameters/pathPagination'

        - name: authorName
          in: query
          description: Filter returned authors by given name.
          schema:
            type: string
          required: false

      responses:
        200:
          description: The list of filtered authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

    put:
      summary: Create or update authors
      operationId: crupdateAuthors
      tags:
        - Authors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: The list of created or updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

    delete:
      tags:
        - Authors
      summary: Delete author by id
      description: Deleting an author by id
      parameters:
        - name: authorName
          in: query
          required: true
          schema:
            type: string
      responses:
          "200":
            description: Author deleted successfully

components:
  schemas:

    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date

    Author:
      type: object
      properties:
        id:
          type: string
        authorName:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
    Sex:
      type: string
      enum:
        - M
        - F

    BaseResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
        body:
          type: object

    Response200:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
        - properties:
            status :
              properties:
                code:
                  type: string
                  enum:
                    - 200
                  default: 200
                message:
                  type: string
                  default: "Request successfully"4

    Response400:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
        - properties:
              status:
                properties:
                  code:
                    type: string
                    enum:
                      - 400
                    default: 400
                  message:
                    type: string
                    default: "bad request"

    Response403:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
        - properties:
            status:
              properties:
                code:
                  type: string
                  enum:
                    - 403
                  default: 403
                message:
                  type: string
                  default: "forbidden"

    Response500:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
        - properties:
            status:
              properties:
                code:
                  type: string
                  enum:
                    - 500
                  default: 500
                message:
                  type: string
                  default: "Internal server error"

  parameters:
    queryPagination:
      name: page
      in: query
      schema:
        type: object
        properties:
          page:
            type: integer
            default: 1

    pathPagination:
      name: pageSize
      in: path
      schema:
        type: object
        properties:
          pageSize:
            type: integer
      required: true

