openapi: 3.0.3
info:
  title: Library API
  version: 1.1.0
  description: STD22027
servers:
  - url: https://library.com
paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter books by given name
          required: false
          schema:
            type: string

        - in: query
          name: releaseDate
          description: Filter books by release date interval
          schema:
            type: string
            format: date
          required: false

      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

    put:
       tags:
         - Books
       summary: Create or update a list of books
       operationId: crupdateBooks
       requestBody:
        content:
         application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Book"
       responses:
         200:
          description: The list of created or updated books
          content:
           application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Book"
  /authors:
    get:
      summary: Get all authors
      operationId: getAuthors
      tags:
        - Authors
      parameters:
        - name: authorName
          in: query
          description: |
            Filter returned authors by given name. 
            If not provided, then list is not filtered.
          schema:
            type: string
          required: false
      responses:
        200:
          description: The list of filtered authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    put:
      summary: Create or update authors
      operationId: crupdateAuthors
      tags:
        - Authors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: The list of created or updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

    delete:
      tags:
        - Authors
      summary: Delete author by id
      description: Deleting an author by id
      parameters:
        - name: authorName
          in: query
          required: true
          schema:
            type: string
      responses:
          "200":
            description: Author deleted successfully


  /topics:
    get:
      tags:
        - Topics
      summary: Get all topics
      description: Retrieve a list of all topics
      responses:
        "200":
          description: List of topics

components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
    Author:
      type: object
      properties:
        id:
          type: string
        authorName:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
    Sex:
      type: string
      enum:
        - M
        - F

    Topic:
      type: object
      properties:
        Id:
          type: string
        topicName:
          type: string