openapi: 3.0.3
info:
  title: Library API
  version: 1.1.0
  description: STD22027
servers:
  - url: https://library.com
paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - $ref: '#/components/parameters/queryPagination'
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

    put:
       tags:
         - Books
       summary: Create or update a list of books
       operationId: crupdateBooks
       requestBody:
        content:
         application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Book"

       responses:
         200:
          description: The list of created or updated books
          content:
           application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Book"
  /authors:
    get:
      summary: Get all authors
      operationId: getAuthors
      tags:
        - Authors
        -
      parameters:
        - $ref: '#/components/parameters/queryPagination'

        - name: authorName
          in: query
          description: Filter returned authors by given name.
          schema:
            type: string
          required: false

      responses:
        200:
          description: The list of filtered authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

    put:
      summary: Create or update authors
      operationId: crupdateAuthors
      tags:
        - Authors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: The list of created or updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

    delete:
      tags:
        - Authors
      summary: Delete author by id
      description: Deleting an author by id
      parameters:
        - name: authorName
          in: query
          required: true
          schema:
            type: string
      responses:
          "200":
            description: Author deleted successfully

components:
  schemas:

    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date

    Author:
      type: object
      properties:
        id:
          type: string
        authorName:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
    Sex:
      type: string
      enum:
        - M
        - F

    BaseResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            code:
              type: string
            message:
              type: string

        body:
          type: object


  parameters:
    queryPagination:
      name: queryPagination
      in: query
      schema:
        type: object
        properties:
          page:
            type: string

    pathPagination:
      name: pathPagination
      in: path
      schema:
        type: object
        properties:
          page:
            type: string
      required: true

